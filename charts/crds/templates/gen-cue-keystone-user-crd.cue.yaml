apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  name: keystoneusers.yaook.cloud
spec:
  group: yaook.cloud
  names:
    kind: KeystoneUser
    plural: keystoneusers
    shortNames: []
    singular: keystoneuser
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current status of the Resource
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: The reason for the current status
      jsonPath: .status.conditions[?(@.type=="Converged")].reason
      name: Reason
      type: string
    - description: Informative messages
      jsonPath: .status.conditions[?(@.type=="Converged")].message
      name: Message
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              keystoneRef:
                description: Keystone deployment to link this service to
                properties:
                  kind:
                    default: KeystoneDeployment
                    description: Specify the kind of Keystone deployment to reference
                    enum:
                    - KeystoneDeployment
                    - ExternalKeystoneDeployment
                    type: string
                  name:
                    type: string
                required:
                - name
                type: object
              role:
                description: Uses this role to bind the User to the target scope(s).
                  If not provided the admin role will be used. If the role does not
                  exist, it will be created. Target scope(s) for the role assignment
                  are either defined by the scopes property or default to the service
                  project if not specified.
                type: string
              scopes:
                description: Optional list of scopes to assign the role in for the
                  User. List entries are key-value pairs where the key is one of the
                  scope types 'project', 'domain' or 'system' and the value is the
                  individual name of the respective scope. If not provided, will default
                  to the project scope for the service project.
                items:
                  oneOf:
                  - required:
                    - project
                  - required:
                    - domain
                  - required:
                    - system
                  properties:
                    domain:
                      type: string
                    project:
                      type: string
                    system:
                      type: string
                  type: object
                minItems: 1
                type: array
            required:
            - keystoneRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z'
                      type: string
                    lastUpdateTime:
                      pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z'
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      enum:
                      - Converged
                      - GarbageCollected
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                type: integer
              phase:
                enum:
                - Created
                - Updating
                - WaitingForDependency
                - Updated
                - BackingOff
                - InvalidConfiguration
                type: string
              updatedGeneration:
                type: integer
            required:
            - conditions
            - observedGeneration
            - phase
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
