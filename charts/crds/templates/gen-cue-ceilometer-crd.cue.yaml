apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  name: ceilometerdeployments.yaook.cloud
spec:
  group: yaook.cloud
  names:
    kind: CeilometerDeployment
    plural: ceilometerdeployments
    shortNames:
    - ceilometerd
    - ceilometerds
    singular: ceilometerdeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current status of the Resource
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: The reason for the current status
      jsonPath: .status.conditions[?(@.type=="Converged")].reason
      name: Reason
      type: string
    - description: Informative messages
      jsonPath: .status.conditions[?(@.type=="Converged")].message
      name: Message
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              additionalHosts:
                items:
                  properties:
                    hostnames:
                      items:
                        type: string
                      type: array
                    ip:
                      type: string
                  required:
                  - hostnames
                  - ip
                  type: object
                type: array
              caCertificates:
                description: CA Certificates that should be added to all services
                  can be placed here. CAs that issue certificates to the service are
                  automatically added and do not need to be specified.
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              ceilometerCompute:
                properties:
                  configTemplates:
                    description: Label-selected configuration templates. This is **a
                      list of objects**, each describing a piece of configuration.
                    items:
                      description: 'A single configuration template snippet. This
                        is applied to nodes based on the nodeSelectors.


                        Configuration options are merged intelligently, generally
                        using cuelang semantics. That means that conflicting values
                        will always cause an InvalidConfiguration error during rollout.'
                      properties:
                        ceilometerComputeConfig:
                          additionalProperties:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          description: The keys of this object are the configuration
                            file sections, the values are objects whose keys correspond
                            to config keys within that section.
                          type: object
                        nodeSelectors:
                          description: List of node selectors, used to select the
                            nodes to which the configuration applies. Each node selector
                            selects a group of nodes; the groups are OR'ed together.
                          items:
                            description: A single node selector.
                            properties:
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: Label keys and values all of which nodes
                                  must have to match the node selector.
                                type: object
                            required:
                            - matchLabels
                            type: object
                          type: array
                      required:
                      - nodeSelectors
                      type: object
                    type: array
                  enabled:
                    default: true
                    description: Deploy ceilometer-agent-compute
                    type: boolean
                  resources:
                    properties:
                      ceilometer-compute-agent:
                        description: Define resource requests/limits for the  container
                        properties:
                          limits:
                            description: Define resource limits for the container
                            properties:
                              cpu:
                                description: CPU time limit for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory limit for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                          requests:
                            description: Define resource requests for the container
                            properties:
                              cpu:
                                description: CPU time request for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory request for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                        type: object
                    type: object
                required:
                - configTemplates
                type: object
              ceilometerConfig:
                additionalProperties:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                description: The keys of this object are the configuration file sections,
                  the values are objects whose keys correspond to config keys within
                  that section.
                type: object
              ceilometerEventDefinitions:
                items:
                  properties:
                    event_type:
                      items:
                        type: string
                      type: array
                    traits:
                      additionalProperties:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: object
                  required:
                  - event_type
                  - traits
                  type: object
                type: array
              ceilometerEventPipeline:
                description: ''
                type: object
                x-kubernetes-preserve-unknown-fields: true
              ceilometerPipeline:
                description: ''
                type: object
                x-kubernetes-preserve-unknown-fields: true
              ceilometerPolling:
                items:
                  properties:
                    discovery:
                      items:
                        type: string
                      type: array
                    interval:
                      type: integer
                    meters:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                    resources:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  - interval
                  - meters
                  type: object
                type: array
              ceilometerSecrets:
                description: List of secrets to inject into the service configuration.
                items:
                  description: A single secret injection configuration. This causes
                    the operator to read the referenced Secret, extract the individual
                    data entries and put them into the corresponding configuration
                    paths, according to the `items`.
                  properties:
                    items:
                      description: Assignment of Secret keys to configuration keys
                      items:
                        properties:
                          key:
                            description: Key name in the Secret
                            type: string
                          path:
                            description: Path inside the configuration to put the
                              value in. Path must be in the form of ``/section/key``.
                              For example, to put a value into the `debug` key in
                              the `DEFAULT` section, you would use `/DEFAULT/debug`.
                            pattern: /.*
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      type: array
                    secretName:
                      description: Name of the Kubernetes Secret to read
                      type: string
                  required:
                  - secretName
                  - items
                  type: object
                type: array
              central:
                properties:
                  replicas:
                    default: 1
                    description: Number of replicas for the service
                    type: integer
                  resources:
                    properties:
                      ceilometer-agent-central:
                        description: Define resource requests/limits for the  container
                        properties:
                          limits:
                            description: Define resource limits for the container
                            properties:
                              cpu:
                                description: CPU time limit for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory limit for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                          requests:
                            description: Define resource requests for the container
                            properties:
                              cpu:
                                description: CPU time request for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory request for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                        type: object
                    type: object
                  scheduleRuleWhenUnsatisfiable:
                    default: ScheduleAnyway
                    description: whenUnsatisfiable indicates how to deal with a Pod
                      if it doesn't satisfy the spread constraint
                    enum:
                    - ScheduleAnyway
                    - DoNotSchedule
                    type: string
                type: object
              imagePullSecrets:
                description: References to image pull secrets which should be included
                  in all Pods spawned directly or indirectly by this resource.
                items:
                  description: ''
                  properties:
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              issuerRef:
                description: Reference an issuer for the certificates used internally
                  by YAOOK (and, by default, also for external services unless overridden).
                properties:
                  name:
                    default: ca-issuer
                    description: Name of the cert-manager Issuer object
                    type: string
                type: object
              jobResources:
                properties:
                  ceilometer-upgrade-job:
                    description: Define resource requests/limits for the  container
                    properties:
                      limits:
                        description: Define resource limits for the container
                        properties:
                          cpu:
                            description: CPU time limit for the container
                            pattern: ^[1-9][0-9]*m?$
                            type: string
                          memory:
                            description: Memory limit for the container
                            pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                            type: string
                        type: object
                      requests:
                        description: Define resource requests for the container
                        properties:
                          cpu:
                            description: CPU time request for the container
                            pattern: ^[1-9][0-9]*m?$
                            type: string
                          memory:
                            description: Memory request for the container
                            pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                            type: string
                        type: object
                    type: object
                type: object
              keystoneRef:
                description: Keystone deployment to link this service to
                properties:
                  kind:
                    default: KeystoneDeployment
                    description: Specify the kind of Keystone deployment to reference
                    enum:
                    - KeystoneDeployment
                    - ExternalKeystoneDeployment
                    type: string
                  name:
                    type: string
                required:
                - name
                type: object
              memcached:
                description: Memcached deployment configuration
                properties:
                  connections:
                    default: 1024
                    description: Maximum number of parallel connections
                    type: integer
                  memory:
                    default: 512
                    description: Maximum memory used for the cache
                    type: integer
                  replicas:
                    default: 3
                    description: Number of replicas for the service
                    type: integer
                  resources:
                    properties:
                      memcached:
                        description: Define resource requests/limits for the memcached
                          container
                        properties:
                          limits:
                            description: Define resource limits for the container
                            properties:
                              cpu:
                                description: CPU time limit for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory limit for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                          requests:
                            description: Define resource requests for the container
                            properties:
                              cpu:
                                description: CPU time request for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory request for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                        type: object
                    type: object
                  scheduleRuleWhenUnsatisfiable:
                    default: ScheduleAnyway
                    description: whenUnsatisfiable indicates how to deal with a Pod
                      if it doesn't satisfy the spread constraint
                    enum:
                    - ScheduleAnyway
                    - DoNotSchedule
                    type: string
                type: object
              messageQueue:
                description: Configure the RabbitMQ instance.
                properties:
                  replicas:
                    default: 3
                    description: Number of replicas for the service
                    type: integer
                  resources:
                    description: It is recommended to set these resource limits to
                      bypass problems with cgroup limits for RabbitMQ. The infra operator
                      will use these values to configure RabbitMQ resource limits
                      separately by setting the fields total_memory_available_override_value
                      and default_worker_pool_size inside /etc/rabbitmq/rabbitmq.conf
                      .
                    properties:
                      rabbitmq:
                        description: Define resource requests/limits for the RabbitMQ
                          container
                        properties:
                          limits:
                            description: Define resource limits for the container
                            properties:
                              cpu:
                                description: CPU time limit for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory limit for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                          requests:
                            description: Define resource requests for the container
                            properties:
                              cpu:
                                description: CPU time request for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory request for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                        type: object
                    type: object
                  scheduleRuleWhenUnsatisfiable:
                    default: ScheduleAnyway
                    description: whenUnsatisfiable indicates how to deal with a Pod
                      if it doesn't satisfy the spread constraint
                    enum:
                    - ScheduleAnyway
                    - DoNotSchedule
                    type: string
                  storageClassName:
                    description: Storage class name. If unset, the cluster-wide default
                      storage class will be used. If that storage class is not set
                      or does not work, the deployment will be broken. Changing storage
                      classes after the initial rollout requires manual intervention.
                    type: string
                  storageSize:
                    default: 8Gi
                    description: Size to request for the PVC. Changing the size after
                      the initial rollout requires manual intervention.
                    pattern: ^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                    type: string
                  tolerateNodeDown:
                    default: false
                    description: If set, Kubernetes will not evict the pod after 300s
                      in case of a NodeDown or Node unreachable.
                    type: boolean
                type: object
              notification:
                properties:
                  replicas:
                    default: 1
                    description: Number of replicas for the service
                    type: integer
                  resources:
                    properties:
                      ceilometer-agent-notification:
                        description: Define resource requests/limits for the  container
                        properties:
                          limits:
                            description: Define resource limits for the container
                            properties:
                              cpu:
                                description: CPU time limit for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory limit for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                          requests:
                            description: Define resource requests for the container
                            properties:
                              cpu:
                                description: CPU time request for the container
                                pattern: ^[1-9][0-9]*m?$
                                type: string
                              memory:
                                description: Memory request for the container
                                pattern: ^[1-9][0-9]*(E|P|T|G|M|k|Ei|Pi|Ti|Gi|Mi|Ki)?$
                                type: string
                            type: object
                        type: object
                    type: object
                  scheduleRuleWhenUnsatisfiable:
                    default: ScheduleAnyway
                    description: whenUnsatisfiable indicates how to deal with a Pod
                      if it doesn't satisfy the spread constraint
                    enum:
                    - ScheduleAnyway
                    - DoNotSchedule
                    type: string
                type: object
              pankoConfig:
                description: List of secrets to inject into the service configuration.
                items:
                  description: A single secret injection configuration. This causes
                    the operator to read the referenced Secret, extract the individual
                    data entries and put them into the corresponding configuration
                    paths, according to the `items`.
                  properties:
                    items:
                      description: Assignment of Secret keys to configuration keys
                      items:
                        properties:
                          key:
                            description: Key name in the Secret
                            type: string
                          path:
                            description: Path inside the configuration to put the
                              value in. Path must be in the form of ``/section/key``.
                              For example, to put a value into the `debug` key in
                              the `DEFAULT` section, you would use `/DEFAULT/debug`.
                            pattern: /.*
                            type: string
                        required:
                        - key
                        - path
                        type: object
                      type: array
                    secretName:
                      description: Name of the Kubernetes Secret to read
                      type: string
                  required:
                  - secretName
                  - items
                  type: object
                type: array
              skip_gnocchi_bootstrap:
                default: false
                type: boolean
              targetRelease:
                description: The release to deploy. Changing this will trigger an
                  upgrade.
                enum:
                - zed
                - '2023.1'
                - '2023.2'
                - '2024.1'
                type: string
            required:
            - keystoneRef
            - central
            - notification
            - ceilometerConfig
            - ceilometerCompute
            - messageQueue
            - memcached
            - targetRelease
            - issuerRef
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z'
                      type: string
                    lastUpdateTime:
                      pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z'
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      enum:
                      - Converged
                      - GarbageCollected
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              installedRelease:
                description: The last successfully deployed release.
                type: string
              nextRelease:
                description: The next release to roll out. This differs from installedRelease
                  during upgrades and from targetRelease during multi-step upgrades.
                type: string
              observedGeneration:
                type: integer
              phase:
                enum:
                - Created
                - Updating
                - WaitingForDependency
                - Updated
                - BackingOff
                - InvalidConfiguration
                type: string
              updatedGeneration:
                type: integer
            required:
            - conditions
            - observedGeneration
            - phase
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
